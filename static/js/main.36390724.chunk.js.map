{"version":3,"sources":["App.js","Calculate.js","index.js"],"names":["App","React","useState","result","setResult","handleClick","e","concat","target","name","clear","backspace","slice","length","calculate","eval","toString","error","className","type","value","onClick","id","Calculate","prev","setPrev","curr","setCurr","input","setInput","operator","setOperator","total","setTotal","inputNum","includes","innerText","prevs","useEffect","operatorType","equals","cal","String","parseFloat","displayType","thousandSeparator","charAt","substring","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.36390724.chunk.js","sourcesContent":["import React from 'react'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    const [result, setResult] = React.useState(\"\")\r\n\r\n    const handleClick = (e) => {\r\n        setResult(result.concat(e.target.name));\r\n    }\r\n    const clear = () => {\r\n        setResult(\"\")\r\n    }\r\n    const backspace = () => {\r\n        setResult(result.slice(0, result.length -1))\r\n    }\r\n    const calculate = () => {\r\n        try {\r\n            setResult(eval(result).toString())\r\n        } catch (error) {\r\n            setResult(\"Koplok\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <form>\r\n                    <input type=\"text\" value={result} />\r\n                </form>\r\n\r\n                <div className=\"keypad\">\r\n                    <button className=\"heightlight\" onClick={clear} id=\"clear\" >Clear</button>\r\n                    <button className=\"heightlight\" onClick={backspace} id=\"back\" >C</button>\r\n                    <button className=\"heightlight\" name=\"/\" onClick={handleClick}>&divide;</button>\r\n                    <button name=\"7\" onClick={handleClick}>7</button>\r\n                    <button name=\"8\" onClick={handleClick}>8</button>\r\n                    <button name=\"9\" onClick={handleClick}>9</button>\r\n                    <button className=\"heightlight\" name=\"*\" onClick={handleClick}>&times;</button>\r\n                    <button name=\"4\" onClick={handleClick}>4</button>\r\n                    <button name=\"5\" onClick={handleClick}>5</button>\r\n                    <button name=\"6\" onClick={handleClick}>6</button>\r\n                    <button className=\"heightlight\" name=\"-\" onClick={handleClick}>&ndash;</button>\r\n                    <button name=\"1\" onClick={handleClick}>1</button>\r\n                    <button name=\"2\" onClick={handleClick}>2</button>\r\n                    <button name=\"3\" onClick={handleClick}>3</button>\r\n                    <button className=\"heightlight\" name=\"+\" onClick={handleClick}>+</button>\r\n                    <button name=\"0\" onClick={handleClick}>0</button>\r\n                    <button name=\".\" onClick={handleClick}>.</button>\r\n                    <button className=\"heightlight\" onClick={calculate} id=\"result\">=</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nconst Calculate = () => {\r\n    const [prev, setPrev] = React.useState(\"\")\r\n    const [curr, setCurr] = React.useState(\"\")\r\n    const [input, setInput] = React.useState(\"0\")\r\n    const [operator, setOperator] = React.useState(null)\r\n    const [total, setTotal] = React.useState(false)\r\n\r\n    const inputNum = e => {\r\n        if(curr.includes(\".\") && e.target.innerText === \".\") return\r\n\r\n        if(total) {\r\n            setPrev(\"\")\r\n        }\r\n\r\n        curr ? setCurr(prevs => prevs + e.target.innerText) : setCurr(e.target.innerText)\r\n        setTotal(false)\r\n    }\r\n    React.useEffect(() => {\r\n        setInput(curr)\r\n    },[curr])\r\n\r\n    React.useEffect(() => {\r\n        setInput(\"0\")\r\n    },[])\r\n\r\n    const operatorType = (e) => {\r\n        setTotal(false)\r\n        setOperator(e.target.innerText)\r\n        if(curr === \"\") return\r\n        if(prev !== \"\") {\r\n            equals()\r\n        }\r\n        else{\r\n            setPrev(curr)\r\n            setCurr(\"\")\r\n        }\r\n    }\r\n    const equals = (e) => {\r\n        if(e?.target.innerText === \"=\"){\r\n            setTotal(true)\r\n        }\r\n        let cal\r\n        switch (operator) {\r\n            case \"/\":\r\n                cal = String(parseFloat(prev) / parseFloat(curr))\r\n                break;\r\n            case \"+\":\r\n                cal = String(parseFloat(prev) + parseFloat(curr))\r\n                break;\r\n            case \"X\":\r\n                cal = String(parseFloat(prev) * parseFloat(curr))\r\n                break;\r\n            case \"-\":\r\n                cal = String(parseFloat(prev) - parseFloat(curr))\r\n                break;\r\n        \r\n            default:\r\n                return;\r\n        }\r\n        setInput(\"\")\r\n        setPrev(cal)\r\n        setCurr(\"\")\r\n    }\r\n\r\n    const minusPlus = () => {\r\n        if(curr.charAt(0) === \"-\"){\r\n            setCurr(curr.substring(1))\r\n        }\r\n        else{\r\n            setCurr(\"-\" + curr)\r\n        }\r\n    }\r\n    const percent = () => {\r\n        curr ? setCurr(String(parseFloat(curr) / 100 * prev)) : setCurr(String(parseFloat(curr) / 100))\r\n    }\r\n    const reset = () => {\r\n        setPrev(\"\")\r\n        setCurr(\"\")\r\n        setInput(\"0\")\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"wrapper\">\r\n                    <div className=\"screen\">\r\n                        {input !== \"\" || input === \"0\" ? \r\n                            <NumberFormat \r\n                                value={input} \r\n                                displayType={'text'}\r\n                                thousandSeparator={true} \r\n                            /> : \r\n                            <NumberFormat \r\n                                value={prev} \r\n                                displayType={'text'} \r\n                                thousandSeparator={true}\r\n                            />\r\n                        }\r\n                    </div>\r\n                    <div className=\"btn light-gray\" onClick={reset}>AC</div>\r\n                    <div className=\"btn light-gray\" onClick={percent}>%</div>\r\n                    <div className=\"btn light-gray\" onClick={minusPlus}>+/-</div>\r\n                    <div className=\"btn orange\" onClick={operatorType}>/</div>\r\n                    <div className=\"btn\" onClick={inputNum}>7</div>\r\n                    <div className=\"btn\" onClick={inputNum}>8</div>\r\n                    <div className=\"btn\" onClick={inputNum}>9</div>\r\n                    <div className=\"btn orange\" onClick={operatorType}>X</div>\r\n                    <div className=\"btn\" onClick={inputNum}>4</div>\r\n                    <div className=\"btn\" onClick={inputNum}>5</div>\r\n                    <div className=\"btn\" onClick={inputNum}>6</div>\r\n                    <div className=\"btn orange\" onClick={operatorType}>+</div>\r\n                    <div className=\"btn\" onClick={inputNum}>1</div>\r\n                    <div className=\"btn\" onClick={inputNum}>2</div>\r\n                    <div className=\"btn\" onClick={inputNum}>3</div>\r\n                    <div className=\"btn orange\" onClick={operatorType}>-</div>\r\n                    <div className=\"btn zero\" onClick={inputNum}>0</div>\r\n                    <div className=\"btn\" onClick={inputNum}>.</div>\r\n                    <div className=\"btn\" onClick={equals}>=</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calculate\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App'\r\nimport Calculate from './Calculate'\r\n\r\nReactDom.render(<Calculate/>, document.getElementById('root'));"],"sourceRoot":""}